services:
  keycloak_db:
    image: postgres:latest
    container_name: keycloak_db
    ports:
      - "5433:5432"
    env_file: ".env"
    environment:
      - POSTGRES_DB=keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.7
    container_name: keycloak
    command: start-dev --import-realm
    ports:
      - "8080:8080"
    env_file: ".env"
    environment:
      - KC_DB=postgres
      - KC_DB_URL_HOST=keycloak_db
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./keycloak:/opt/keycloak/data/import

  minio:
    image: minio/minio:latest
    container_name: minio
    env_file:
      - .env
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    command: 
      server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 10s
      retries: 3
  
  default_bucket_init:
    image: minio/minio:latest
    container_name: default_bucket_init
    env_file:
      - .env
    depends_on:
      minio:
        condition: service_healthy
    
    entrypoint:
      /bin/sh -c "
        mc alias set myminio http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD &&
        mc mb myminio/default --ignore-existing"

  nestjs_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs_app
    env_file: ".env"
    depends_on:
      - keycloak_db
      - keycloak
      - minio
    ports:
      - "3000:3000"

volumes:
  postgres_data:
  minio-data:
